name: CI

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      CI: 1

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.3"
          - "7.4"

    steps:
      - uses: actions/checkout@v2
      - uses: niden/actions-memcached@v7

      - name: Add German locale
        run: sudo locale-gen de_DE

      - name: Add Spanish locale
        run: sudo locale-gen es_ES

      - name: Tmp dir permissions
        run: chmod -R 777 ./app/tmp

      - name: Set-up DB config
        run: echo "<?php
          class DATABASE_CONFIG {
          private \$identities = array(
          'mysql' => array(
          'datasource' => 'Database/Mysql',
          'host' => '127.0.0.1',
          'login' => 'root',
          'password' => 'password',
          'port' => '33306',
          ),
          'pgsql' => array(
          'datasource' => 'Database/Postgres',
          'host' => '127.0.0.1',
          'login' => 'postgres',
          'database' => 'cakephp_test',
          'schema' => array(
          'default' => 'public',
          'test' => 'public',
          'test2' => 'test2',
          'test_database_three' => 'test3'
          )
          ),
          'sqlite' => array(
          'datasource' => 'Database/Sqlite',
          'database' => array(
          'default' => ':memory:',
          'test' => ':memory:',
          'test2' => '/tmp/cakephp_test2.db',
          'test_database_three' => '/tmp/cakephp_test3.db',
          ),
          )
          );
          public \$default = array(
          'persistent' => false,
          'host' => '',
          'login' => '',
          'password' => '',
          'database' => 'cakephp_test',
          'prefix' => ''
          );
          public \$test = array(
          'persistent' => false,
          'host' => '',
          'login' => '',
          'password' => '',
          'database' => 'cakephp_test',
          'prefix' => ''
          );
          public \$test2 = array(
          'persistent' => false,
          'host' => '',
          'login' => '',
          'password' => '',
          'database' => 'cakephp_test2',
          'prefix' => ''
          );
          public \$test_database_three = array(
          'persistent' => false,
          'host' => '',
          'login' => '',
          'password' => '',
          'database' => 'cakephp_test3',
          'prefix' => ''
          );
          public function __construct() {
          \$db = 'mysql';
          if (!empty(\$_SERVER['DB'])) {
          \$db = \$_SERVER['DB'];
          }
          foreach (array('default', 'test', 'test2', 'test_database_three') as \$source) {
          \$config = array_merge(\$this->{\$source}, \$this->identities[\$db]);
          if (is_array(\$config['database'])) {
          \$config['database'] = \$config['database'][\$source];
          }
          if (!empty(\$config['schema']) && is_array(\$config['schema'])) {
          \$config['schema'] = \$config['schema'][\$source];
          }
          \$this->{\$source} = \$config;
          }
          }
          }" > app/Config/database.php

      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          php-version: "${{ matrix.php-version }}"
          extensions: mcrypt, pdo_sqlite, pdo_mysql
      - name: "Composer install"
        run: "composer install --prefer-dist"
      - name: "Run PHPUnit (SQLite)"
        run: "vendors/bin/phpunit"

      - name: "Create MySQL databases"
        run: "mysql --host 127.0.0.1 --user root --port 33306 -ppassword -e 'CREATE DATABASE cakephp_test; CREATE DATABASE cakephp_test2; CREATE DATABASE cakephp_test3;'"

      - name: "Run PHPUnit (MySQL)"
        env:
          DB: mysql
        run: "vendors/bin/phpunit"
